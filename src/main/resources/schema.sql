create table if not exists FRIENDSHIP_STATUSES (
    friendship_status_id int generated by default as identity primary key,
    status_name varchar (64)
);

create table if not exists GENRES (
    genre_id int not null primary key auto_increment,
    genre_name varchar (32),
    description varchar (200)
);

create table if not exists MPA_RATINGS (
    mpa_rating_id int generated by default as identity primary key,
    mpa_name varchar (6),
    description varchar (100)
);

create table if not exists FILMS (
     film_id int generated by default as identity primary key,
     film_name varchar (64),
     description varchar (200),
     release_date timestamp,
     duration int,
     mpa_rating_id int references MPA_RATINGS (mpa_rating_id)
);

create table if not exists FILM_GENRES (
    film_id  int not null references FILMS (film_id),
    genre_id int not null references GENRES (genre_id),
    PRIMARY KEY (film_id, genre_id)
);

create table if not exists USERS(
    user_id int generated by default as identity primary key,
    email varchar (64),
    login varchar (64),
    username varchar (64),
    birthday timestamp
);

create table if not exists USER_FRIENDS (
    user_id int references USERS (user_id),
    friend_id int,
    friendship_status_id int references FRIENDSHIP_STATUSES (friendship_status_id),
    PRIMARY KEY (user_id, friend_id)
);

create table if not exists LIKES (
    film_id int references FILMS (film_id),
    user_id int references USERS (user_id),
    primary key (film_id, user_id)
);